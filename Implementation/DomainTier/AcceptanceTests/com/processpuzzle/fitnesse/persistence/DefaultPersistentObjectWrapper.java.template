package com.processpuzzle.fitnesse.persistence;

<<import>>
import java.lang.reflect.Method;
import java.util.List;

import org.apache.commons.lang.StringUtils;

import com.google.common.collect.Lists;
import com.processpuzzle.fundamental_types.domain.Entity;

public class DefaultPersistentObjectWrapper implements PersistentObjectWrapper<<<type>>> {
   private <<type>> persistentObject;
   private List<Method> getters;
   <<fields>>
   
   public DefaultPersistentObjectWrapper( ) {}

   @Override
   public void wrapPersistentObject( <<type>> persistentObject ) {
      this.persistentObject = persistentObject;
      //determineProperties();
      assignValuesOfPublicFields();
   }

   private void assignValuesOfPublicFields() {
      <<expressions>>
   }

   private void determineProperties() {
      getters = Lists.newArrayList();
      
      for( Method method : persistentObject.getClass().getMethods() ){
         if( StringUtils.startsWith( method.getName(), "get" )) getters.add( method );
      }
   }
}
